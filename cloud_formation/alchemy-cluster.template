{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\nAlchemy Cluster with an Autoscaling CoreOS Cluster and an Elastic Load Balancer.\n",
    "Mappings": {
        "CoreOSImageRegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-02c9c86c"
            },
            "ap-southeast-1": {
                "AMI": "ami-00a06963"
            },
            "ap-southeast-2": {
                "AMI": "ami-949abdf7"
            },
            "eu-central-1": {
                "AMI": "ami-15190379"
            },
            "eu-west-1": {
                "AMI": "ami-2a1fad59"
            },
            "sa-east-1": {
                "AMI": "ami-c40784a8"
            },
            "us-east-1": {
                "AMI": "ami-7f3a0b15"
            },
            "us-gov-west-1": {
                "AMI": "ami-e0b70b81"
            },
            "us-west-1": {
                "AMI": "ami-a8aedfc8"
            },
            "us-west-2": {
                "AMI": "ami-4f00e32f"
            }
        },
        "NatRegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-27d6e626"
            },
            "ap-southeast-1": {
                "AMI": "ami-6aa38238"
            },
            "ap-southeast-2": {
                "AMI": "ami-893f53b3"
            },
            "eu-central-1": {
                "AMI": "ami-ae380eb3"
            },
            "eu-west-1": {
                "AMI": "ami-14913f63"
            },
            "sa-east-1": {
                "AMI": "ami-8122969c"
            },
            "us-east-1": {
                "AMI": "ami-184dc970"
            },
            "us-west-1": {
                "AMI": "ami-a98396ec"
            },
            "us-west-2": {
                "AMI": "ami-290f4119"
            }
        }
    },
    "Outputs": {
        "ELBURL": {
            "Description": "ELBURL of the website",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "ElasticLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        },
        "NATIPAddress": {
            "Description": "Elastic IP address of the NAT",
            "Value": {
                "Ref": "NATIPAddress"
            }
        }
    },
    "Parameters": {
        "AutoScalingGroupInstanceType": {
            "AllowedValues": [
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "m3.medium",
            "Description": "Cluster EC2 instance type",
            "Type": "String"
        },
        "AutoScalingSize": {
            "Default": "3",
            "Description": "the number of instances to launch in the AutoScalaing Group",
            "Type": "Number"
        },
        "ClusterName": {
            "Description": "Unique Name for the cluster",
            "Type": "String"
        },
        "CoreOSDiscoveryURL": {
            "Description": "An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new?size=3",
            "Type": "String"
        },
        "SecurityKeyName": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "AlchemyVPC": {
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": "false",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " VPC"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "CoreOSLaunchConfig": {
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeSize": "150"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "CoreOSImageRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "AutoScalingGroupInstanceType"
                },
                "KeyName": {
                    "Ref": "SecurityKeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "CoreOSSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config\n",
                                "coreos:\n",
                                "  etcd2:\n",
                                "    discovery: ",
                                {
                                    "Ref": "CoreOSDiscoveryURL"
                                },
                                "\n",
                                "    advertise-client-urls: http://$private_ipv4:2379\n",
                                "    initial-advertise-peer-urls: http://$private_ipv4:2380\n",
                                "    listen-client-urls: http://0.0.0.0:2379\n",
                                "    listen-peer-urls: http://$private_ipv4:2380\n",
                                "  units:\n",
                                "    - name: etcd2.service\n",
                                "      command: start\n",
                                "    - name: fleet.service\n",
                                "      command: start\n",
                                "\n",
                                "write_files:\n",
                                "  - path: /etc/environment\n",
                                "    content: |\n",
                                "        REGION_NAME=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "        CLUSTER_NAME=",
                                {
                                    "Ref": "ClusterName"
                                },
                                "\n",
                                "        PRIVATEIP=$private_ipv4\n",
                                "        PUBLICIP=$public_ipv4\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "CoreOSSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable all communication on private subnet",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "-1",
                        "ToPort": "65535"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "0",
                        "IpProtocol": "-1",
                        "ToPort": "65535"
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "CoreOSServerAutoScale": {
            "Properties": {
                "DesiredCapacity": {
                    "Ref": "AutoScalingSize"
                },
                "LaunchConfigurationName": {
                    "Ref": "CoreOSLaunchConfig"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "ElasticLoadBalancer"
                    }
                ],
                "MaxSize": {
                    "Ref": "AutoScalingSize"
                },
                "MinSize": {
                    "Ref": "AutoScalingSize"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "privateBSubnet"
                    },
                    {
                        "Ref": "privateASubnet"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "ElasticLoadBalancer": {
            "Properties": {
                "CrossZone": "true",
                "Listeners": [
                    {
                        "InstancePort": "8080",
                        "InstanceProtocol": "HTTP",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "publicASubnet"
                    },
                    {
                        "Ref": "publicBSubnet"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " ELB"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "LoadBalancerSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable all communication on private subnet",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "8080",
                        "IpProtocol": "tcp",
                        "ToPort": "8080"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "NATEIPAttachment": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATIPAddress",
                        "AllocationId"
                    ]
                },
                "InstanceId": {
                    "Ref": "natProxyEC2Instance"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "NATIPAddress": {
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "NatSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable all communication on private subnet",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "-1",
                        "ToPort": "65535"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "0",
                        "IpProtocol": "-1",
                        "ToPort": "65535"
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "aclEntry1": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "alchemyACL"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "aclEntry2": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false",
                "NetworkAclId": {
                    "Ref": "alchemyACL"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "alchemyACL": {
            "Properties": {
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "internetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Internet Gateway"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "internetGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "internetGateway"
                },
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "natProxyEC2Instance": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "NatRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.small",
                "KeyName": {
                    "Ref": "SecurityKeyName"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "NatSecurityGroup"
                    }
                ],
                "SourceDestCheck": "false",
                "SubnetId": {
                    "Ref": "publicASubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " NAT Instance"
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "privateASubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "a"
                        ]
                    ]
                },
                "CidrBlock": "10.0.1.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Private A Subnet"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "privateASubnetACLAttachment": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "alchemyACL"
                },
                "SubnetId": {
                    "Ref": "privateASubnet"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "privateASubnetRouteTableAttachment": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                },
                "SubnetId": {
                    "Ref": "privateASubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "privateBSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "b"
                        ]
                    ]
                },
                "CidrBlock": "10.0.2.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Private B Subnet"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "privateBSubnetACLAttachment": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "alchemyACL"
                },
                "SubnetId": {
                    "Ref": "privateBSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "privateBSubnetRouteTableAttachment": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                },
                "SubnetId": {
                    "Ref": "privateBSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "privateInternetRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "natProxyEC2Instance"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "privateRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Private Route Table"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "publicASubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "a"
                        ]
                    ]
                },
                "CidrBlock": "10.0.254.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Public A Subnet"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "publicASubnetACLAttachment": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "alchemyACL"
                },
                "SubnetId": {
                    "Ref": "publicASubnet"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "publicASubnetRouteTableAttachment": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                },
                "SubnetId": {
                    "Ref": "publicASubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "publicBSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "b"
                        ]
                    ]
                },
                "CidrBlock": "10.0.253.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Public B Subnet"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "publicBSubnetACLAttachment": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "alchemyACL"
                },
                "SubnetId": {
                    "Ref": "publicBSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "publicBSubnetRouteTableAttachment": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                },
                "SubnetId": {
                    "Ref": "publicBSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "publicInternetRoute": {
            "DependsOn": "internetGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "internetGateway"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "publicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    " Public Route Table"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "AlchemyVPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        }
    }
}
